[user]
	name = meitham
	email = m@meitham.com
[alias]
	st = status
	ci = commit
	stuno = status -uno
	br = branch
	co = checkout
	df = diff
	wdiff = diff --color-words
	undo = reset --hard
	lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
	sergor = log --graph --format=format:'%C(yellow)%h %cn %C(reset) - %C(green)(%cr)%C(reset) - %C(white) %s %C(reset)'
	alias = config --get-regexp ^alias.
	squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"
	mr = !sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2 && git checkout mr-$1-$2' -
	accept-ours = "!f() { git checkout --ours -- \"${@:-.}\"; git add -u \"${@:-.}\"; }; f"
	accept-theirs = "!f() { git checkout --theirs -- \"${@:-.}\"; git add -u \"${@:-.}\"; }; f"
	fixup = "!f() { TARGET=$(git rev-parse ${1:-HEAD}); git commit --fixup=$TARGET; EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
  frbi = "!f() { git rebase -i $(git log --pretty=oneline --color=always | fzf --ansi | cut -d ' ' -f1)^ ; }; f"

[color]
	ui = auto
[core]
	excludesfile = ~/.config/git/gitignore
[http]
	sslVerify = false
[push]
	default = tracking
[merge]
	conflictStyle = diff3
	tool = fugitive
[diff "daff-csv"]
	command = daff diff --git
[merge "daff-csv"]
	name = daff tabular csv merge
	driver = daff merge --output %A %O %A %B
[credential]
	helper = manager
[mergetool "fugitive"]
	cmd = nvim -f -c \"Gdiff\" \"$MERGED\"

[pull]
	rebase = true
[rebase]
	autoStash = true

# vim: set ts=2 sw=2 expandtab:
[init]
	defaultBranch = main
