unbind C-b
# OPTIONS
set -g prefix C-space
bind Space send-prefix
set -g mode-keys vi
set -g history-limit 10000

set -sg escape-time 1
set -g base-index 1

bind r source-file ~/.tmux.conf\; display "Reloaded!"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind k clear-history

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
# bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'

# shift the window left or right
# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1

# move to the window on the left or right
bind-key -n C-S-Left previous-window
bind-key -n C-S-Right next-window

################################################################################
# vi Style Editing
################################################################################

# unbind p
# bind p paste-buffer
# bind-key -t vi-copy v begin-selection
# bind -t vi-copy y copy-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind -t vi-copy Escape cancel

# transfer copied text to attached terminal with yank
bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank > #{pane_tty}'

# transfer most-recently copied text to attached terminal with yank
bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# transfer previously copied text (chosen from a menu) to attached terminal
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'


# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy Enter copy-pipe pbcopy
bind-key -T root C-y run-shell "tmux-smart-paste"


# Make mouse useful in copy mode
set -g mouse on
set -g aggressive-resize on

# Set ability to capture on start and restore on exit window data when running an application
set-window-option -g alternate-screen on

set -g default-terminal "screen-256color"
# some of my servers cannot support this
# set -g default-terminal "tmux-256color"
# set-option -sa terminal-overrides ',xterm-256color:RGB'
# set -as terminal-features ",gnome*:RGB"

# source ~/.config/tmux/themes/tmux-colors-solarized-latest.tmux
run-shell "~/.tmux/themes/nord-tmux/nord.tmux"

set-option -g status-position top
# THEME
# set -g status-bg blue
# set -g status-fg white
# set -g status-interval 1
# set -g status-keys vi
# set -g status-left '#[bg=white]#[fg=black](#S) #[bg=yellow]#[fg=red]#(whoami)#[bg=yellow]#[fg=black]@#[bg=yellow]#[fg=orange]#H #[default] '
# set -g status-left-length 30
# set -g status-right-length 40
# set -g status-right '♪ #(exec amixer get Master | egrep -o "[0-9]+%" | egrep -o "[0-9]*") | #[fg=red]♥#(acpi | cut -d ',' -f 2) | #[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] | %H:%M'

# set-window-option -g window-status-current-attr bright
# set-window-option -g window-status-format "#[fg=white]#[bg=blue]#I.#[bg=blue]#[fg=white]#W |"
# set-window-option -g window-status-current-format '#[fg=yellow](#I.#P#F#W)#[default]'
# source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
# source /usr/share/powerline/bindings/tmux/powerline.conf
# run-shell "powerline-config tmux setup"
run-shell "export TMUX_POWERLINE_RCFILE="$HOME/.config/tmux/powerlinerc""
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"
